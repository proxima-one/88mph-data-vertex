/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ethers, Signer } from "ethers";
import { Provider } from "@ethersproject/providers";

import { Vesting } from "../Vesting";
//import { Address } from "@graphprotocol/graph-ts";

export class Vesting__factory {
  static bind(address: string, provider?: Signer | Provider): Vesting {
    if (!provider) {
      provider = ethers.getDefaultProvider("mainnet");
    }
    return this.connect(address.toString(), provider);
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Vesting {
    return new Contract(address, _abi, signerOrProvider) as Vesting;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    name: "accountVestList",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "vestPeriodInSeconds",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "creationTimestamp",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "withdrawnAmount",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "vestIdx",
        type: "uint256"
      }
    ],
    name: "getVestWithdrawableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: true,
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address"
      }
    ],
    payable: false,
    stateMutability: "view",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "vestPeriodInSeconds",
        type: "uint256"
      }
    ],
    name: "vest",
    outputs: [
      {
        internalType: "uint256",
        name: "vestIdx",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "vestIdx",
        type: "uint256"
      }
    ],
    name: "withdrawVested",
    outputs: [
      {
        internalType: "uint256",
        name: "withdrawnAmount",
        type: "uint256"
      }
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
  }
];
