"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Vesting__factory = void 0;
var ethers_1 = require("ethers");
//import { Address } from "@graphprotocol/graph-ts";
var Vesting__factory = /** @class */ (function () {
    function Vesting__factory() {
    }
    Vesting__factory.bind = function (address, provider) {
        if (!provider) {
            provider = ethers_1.ethers.getDefaultProvider("mainnet");
        }
        return this.connect(address.toString(), provider);
    };
    Vesting__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    return Vesting__factory;
}());
exports.Vesting__factory = Vesting__factory;
var _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_token",
                type: "address"
            }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "constructor"
    },
    {
        constant: true,
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            }
        ],
        name: "accountVestList",
        outputs: [
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "vestPeriodInSeconds",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "creationTimestamp",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "withdrawnAmount",
                type: "uint256"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "vestIdx",
                type: "uint256"
            }
        ],
        name: "getVestWithdrawableAmount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: true,
        inputs: [],
        name: "token",
        outputs: [
            {
                internalType: "contract IERC20",
                name: "",
                type: "address"
            }
        ],
        payable: false,
        stateMutability: "view",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "vestPeriodInSeconds",
                type: "uint256"
            }
        ],
        name: "vest",
        outputs: [
            {
                internalType: "uint256",
                name: "vestIdx",
                type: "uint256"
            }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "vestIdx",
                type: "uint256"
            }
        ],
        name: "withdrawVested",
        outputs: [
            {
                internalType: "uint256",
                name: "withdrawnAmount",
                type: "uint256"
            }
        ],
        payable: false,
        stateMutability: "nonpayable",
        type: "function"
    }
];
//# sourceMappingURL=Vesting__factory.js.map