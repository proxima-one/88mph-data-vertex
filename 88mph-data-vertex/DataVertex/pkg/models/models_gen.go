// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

type DPool struct {
	ID                                   *string    `json:"id,omitempty"`
	Address                              *string    `json:"address,omitempty"`
	MoneyMarket                          *string    `json:"moneyMarket,omitempty"`
	Stablecoin                           *string    `json:"stablecoin,omitempty"`
	InterestModel                        *string    `json:"interestModel,omitempty"`
	Users                                []*User    //  `json:"users,omitempty"`
	UserIDs                              []*string  `json:"UserIDs,omitempty"`
	NumUsers                             *int64     `json:"numUsers,omitempty"`
	Deposits                             []*Deposit `json:"deposits,omitempty"`
	DepositIDs                           []*string  `json:"DepositIDs,omitempty"`
	NumDeposits                          *int64     `json:"numDeposits,omitempty"`
	NumActiveDeposits                    *int64     `json:"numActiveDeposits,omitempty"`
	TotalActiveDeposit                   *float64   `json:"totalActiveDeposit,omitempty"`
	TotalHistoricalDeposit               *float64   `json:"totalHistoricalDeposit,omitempty"`
	TotalInterestPaid                    *float64   `json:"totalInterestPaid,omitempty"`
	UnfundedDepositAmount                *float64   `json:"unfundedDepositAmount,omitempty"`
	Funders                              []*Funder  //`json:"funders,omitempty"`
	FunderIDs                            []*string  `json:"FunderIDs,omitempty"`
	NumFunders                           *int64     `json:"numFunders,omitempty"`
	Fundings                             []*Funding `json:"fundings,omitempty"`
	FundingIDs                           []*string  `json:"FundingIDs,omitempty"`
	NumFundings                          *int64     `json:"numFundings,omitempty"`
	MinDepositPeriod                     *int64     `json:"MinDepositPeriod,omitempty"`
	MaxDepositPeriod                     *int64     `json:"MaxDepositPeriod,omitempty"`
	MinDepositAmount                     *float64   `json:"MinDepositAmount,omitempty"`
	MaxDepositAmount                     *float64   `json:"MaxDepositAmount,omitempty"`
	MphDepositorRewardMintMultiplier     *float64   `json:"mphDepositorRewardMintMultiplier,omitempty"`
	MphDepositorRewardTakeBackMultiplier *float64   `json:"mphDepositorRewardTakeBackMultiplier,omitempty"`
	MphFunderRewardMultiplier            *float64   `json:"mphFunderRewardMultiplier,omitempty"`
	OneYearInterestRate                  *float64   `json:"oneYearInterestRate,omitempty"`
	Surplus                              *float64   `json:"surplus,omitempty"`
	MoneyMarketIncomeIndex               *int64     `json:"moneyMarketIncomeIndex,omitempty"`
	OracleInterestRate                   *float64   `json:"oracleInterestRate,omitempty"`
	Proof                                *Proof     //     `json:"proof,omitempty"`
}

type DPoolInput struct {
	ID                                   *string   `json:"id,omitempty"`
	Address                              *string   `json:"address,omitempty"`
	MoneyMarket                          *string   `json:"moneyMarket,omitempty"`
	Stablecoin                           *string   `json:"stablecoin,omitempty"`
	InterestModel                        *string   `json:"interestModel,omitempty"`
	UserIDs                              []*string `json:"UserIDs,omitempty"`
	NumUsers                             *int64    `json:"numUsers,omitempty"`
	DepositIDs                           []*string `json:"DepositIDs,omitempty"`
	NumDeposits                          *int64    `json:"numDeposits,omitempty"`
	NumActiveDeposits                    *int64    `json:"numActiveDeposits,omitempty"`
	TotalActiveDeposit                   *float64  `json:"totalActiveDeposit,omitempty"`
	TotalHistoricalDeposit               *float64  `json:"totalHistoricalDeposit,omitempty"`
	TotalInterestPaid                    *float64  `json:"totalInterestPaid,omitempty"`
	UnfundedDepositAmount                *float64  `json:"unfundedDepositAmount,omitempty"`
	FunderIDs                            []*string `json:"FunderIDs,omitempty"`
	NumFunders                           *int64    `json:"numFunders,omitempty"`
	FundingIDs                           []*string `json:"FundingIDs,omitempty"`
	NumFundings                          *int64    `json:"numFundings,omitempty"`
	MinDepositPeriod                     *int64    `json:"MinDepositPeriod,omitempty"`
	MaxDepositPeriod                     *int64    `json:"MaxDepositPeriod,omitempty"`
	MinDepositAmount                     *float64  `json:"MinDepositAmount,omitempty"`
	MaxDepositAmount                     *float64  `json:"MaxDepositAmount,omitempty"`
	MphDepositorRewardMintMultiplier     *float64  `json:"mphDepositorRewardMintMultiplier,omitempty"`
	MphDepositorRewardTakeBackMultiplier *float64  `json:"mphDepositorRewardTakeBackMultiplier,omitempty"`
	MphFunderRewardMultiplier            *float64  `json:"mphFunderRewardMultiplier,omitempty"`
	OneYearInterestRate                  *float64  `json:"oneYearInterestRate,omitempty"`
	Surplus                              *float64  `json:"surplus,omitempty"`
	MoneyMarketIncomeIndex               *int64    `json:"moneyMarketIncomeIndex,omitempty"`
	OracleInterestRate                   *float64  `json:"oracleInterestRate,omitempty"`
}

type DPoolList struct {
	ID             *string   `json:"id,omitempty"`
	Pools          []*DPool  //`json:"pools,omitempty"`
	DPoolIDs       []*string `json:"DPoolIDs,omitempty"`
	NumPools       *int64    `json:"numPools,omitempty"`
	NumUsers       *int64    `json:"numUsers,omitempty"`
	NumActiveUsers *int64    `json:"numActiveUsers,omitempty"`
	NumFunders     *int64    `json:"numFunders,omitempty"`
	Proof          *Proof    //    `json:"proof,omitempty"`
}

type DPoolListInput struct {
	ID             *string   `json:"id,omitempty"`
	DPoolIDs       []*string `json:"DPoolIDs,omitempty"`
	NumPools       *int64    `json:"numPools,omitempty"`
	NumUsers       *int64    `json:"numUsers,omitempty"`
	NumActiveUsers *int64    `json:"numActiveUsers,omitempty"`
	NumFunders     *int64    `json:"numFunders,omitempty"`
}

type Deposit struct {
	ID                            *string  `json:"id,omitempty"`
	NftID                         *int64   `json:"nftID,omitempty"`
	User                          *User    //  `json:"user,omitempty"`
	UserID                        *string  `json:"UserID,omitempty"`
	Pool                          *DPool   // `json:"pool,omitempty"`
	DPoolID                       *string  `json:"DPoolID,omitempty"`
	Amount                        *float64 `json:"amount,omitempty"`
	MaturationTimestamp           *int64   `json:"maturationTimestamp,omitempty"`
	Active                        *bool    `json:"active,omitempty"`
	DepositTimestamp              *int64   `json:"depositTimestamp,omitempty"`
	DepositLength                 *int64   `json:"depositLength,omitempty"`
	InterestEarned                *float64 `json:"interestEarned,omitempty"`
	FundingID                     *int64   `json:"fundingID,omitempty"`
	MintMPHAmount                 *float64 `json:"mintMPHAmount,omitempty"`
	TakeBackMPHAmount             *float64 `json:"takeBackMPHAmount,omitempty"`
	InitialMoneyMarketIncomeIndex *int64   `json:"initialMoneyMarketIncomeIndex,omitempty"`
	FundingInterestPaid           *float64 `json:"fundingInterestPaid,omitempty"`
	FundingRefundAmount           *float64 `json:"fundingRefundAmount,omitempty"`
	Proof                         *Proof   //   `json:"proof,omitempty"`
}

type DepositInput struct {
	ID                            *string  `json:"id,omitempty"`
	NftID                         *int64   `json:"nftID,omitempty"`
	UserID                        *string  `json:"UserID,omitempty"`
	DPoolID                       *string  `json:"DPoolID,omitempty"`
	Amount                        *float64 `json:"amount,omitempty"`
	MaturationTimestamp           *int64   `json:"maturationTimestamp,omitempty"`
	Active                        *bool    `json:"active,omitempty"`
	DepositTimestamp              *int64   `json:"depositTimestamp,omitempty"`
	DepositLength                 *int64   `json:"depositLength,omitempty"`
	InterestEarned                *float64 `json:"interestEarned,omitempty"`
	FundingID                     *int64   `json:"fundingID,omitempty"`
	MintMPHAmount                 *float64 `json:"mintMPHAmount,omitempty"`
	TakeBackMPHAmount             *float64 `json:"takeBackMPHAmount,omitempty"`
	InitialMoneyMarketIncomeIndex *int64   `json:"initialMoneyMarketIncomeIndex,omitempty"`
	FundingInterestPaid           *float64 `json:"fundingInterestPaid,omitempty"`
	FundingRefundAmount           *float64 `json:"fundingRefundAmount,omitempty"`
}

type FractionalDeposit struct {
	ID                    *string  `json:"id,omitempty"`
	Address               *string  `json:"address,omitempty"`
	ZeroCouponBondAddress *string  `json:"zeroCouponBondAddress,omitempty"`
	OwnerAddress          *string  `json:"ownerAddress,omitempty"`
	Active                *bool    `json:"active,omitempty"`
	Deposit               *Deposit `json:"deposit,omitempty"`
	DepositID             *string  `json:"DepositID,omitempty"`
	Proof                 *Proof   //   `json:"proof,omitempty"`
}

type FractionalDepositInput struct {
	ID                    *string `json:"id,omitempty"`
	Address               *string `json:"address,omitempty"`
	ZeroCouponBondAddress *string `json:"zeroCouponBondAddress,omitempty"`
	OwnerAddress          *string `json:"ownerAddress,omitempty"`
	Active                *bool   `json:"active,omitempty"`
	DepositID             *string `json:"DepositID,omitempty"`
}

type Funder struct {
	ID                     *string                `json:"id,omitempty"`
	Address                *string                `json:"address,omitempty"`
	Pools                  []*DPool               //             `json:"pools,omitempty"`
	DPoolIDs               []*string              `json:"DPoolIDs,omitempty"`
	NumPools               *int64                 `json:"numPools,omitempty"`
	Fundings               []*Funding             //           `json:"fundings,omitempty"`
	FundingIDs             []*string              `json:"FundingIDs,omitempty"`
	NumFundings            *int64                 `json:"numFundings,omitempty"`
	TotalMPHEarned         *float64               `json:"totalMPHEarned,omitempty"`
	TotalInterestByPool    []*FunderTotalInterest `json:"totalInterestByPool,omitempty"`
	FunderTotalInterestIDs []*string              `json:"FunderTotalInterestIDs,omitempty"`
	Proof                  *Proof                 //                 `json:"proof,omitempty"`
}

type FunderInput struct {
	ID                     *string   `json:"id,omitempty"`
	Address                *string   `json:"address,omitempty"`
	DPoolIDs               []*string `json:"DPoolIDs,omitempty"`
	NumPools               *int64    `json:"numPools,omitempty"`
	FundingIDs             []*string `json:"FundingIDs,omitempty"`
	NumFundings            *int64    `json:"numFundings,omitempty"`
	TotalMPHEarned         *float64  `json:"totalMPHEarned,omitempty"`
	FunderTotalInterestIDs []*string `json:"FunderTotalInterestIDs,omitempty"`
}

type FunderTotalInterest struct {
	ID                               *string  `json:"id,omitempty"`
	Funder                           *Funder  //`json:"funder,omitempty"`
	FunderID                         *string  `json:"FunderID,omitempty"`
	Pool                             *DPool   // `json:"pool,omitempty"`
	DPoolID                          *string  `json:"DPoolID,omitempty"`
	TotalDeficitFunded               *float64 `json:"totalDeficitFunded,omitempty"`
	TotalHistoricalDeficitFunded     *float64 `json:"totalHistoricalDeficitFunded,omitempty"`
	TotalInterestEarned              *float64 `json:"totalInterestEarned,omitempty"`
	TotalHistoricalInterestEarned    *float64 `json:"totalHistoricalInterestEarned,omitempty"`
	TotalRecordedFundedDepositAmount *float64 `json:"totalRecordedFundedDepositAmount,omitempty"`
	Proof                            *Proof   //   `json:"proof,omitempty"`
}

type FunderTotalInterestInput struct {
	ID                               *string  `json:"id,omitempty"`
	FunderID                         *string  `json:"FunderID,omitempty"`
	DPoolID                          *string  `json:"DPoolID,omitempty"`
	TotalDeficitFunded               *float64 `json:"totalDeficitFunded,omitempty"`
	TotalHistoricalDeficitFunded     *float64 `json:"totalHistoricalDeficitFunded,omitempty"`
	TotalInterestEarned              *float64 `json:"totalInterestEarned,omitempty"`
	TotalHistoricalInterestEarned    *float64 `json:"totalHistoricalInterestEarned,omitempty"`
	TotalRecordedFundedDepositAmount *float64 `json:"totalRecordedFundedDepositAmount,omitempty"`
}

type Funding struct {
	ID                             *string  `json:"id,omitempty"`
	NftID                          *int64   `json:"nftID,omitempty"`
	Funder                         *Funder  //`json:"funder,omitempty"`
	FunderID                       *string  `json:"FunderID,omitempty"`
	Pool                           *DPool   // `json:"pool,omitempty"`
	DPoolID                        *string  `json:"DPoolID,omitempty"`
	FromDepositID                  *int64   `json:"fromDepositID,omitempty"`
	ToDepositID                    *int64   `json:"toDepositID,omitempty"`
	Active                         *bool    `json:"active,omitempty"`
	RecordedFundedDepositAmount    *float64 `json:"recordedFundedDepositAmount,omitempty"`
	RecordedMoneyMarketIncomeIndex *int64   `json:"recordedMoneyMarketIncomeIndex,omitempty"`
	InitialFundedDepositAmount     *float64 `json:"initialFundedDepositAmount,omitempty"`
	FundedDeficitAmount            *float64 `json:"fundedDeficitAmount,omitempty"`
	TotalInterestEarned            *float64 `json:"totalInterestEarned,omitempty"`
	CreationTimestamp              *int64   `json:"creationTimestamp,omitempty"`
	MphRewardEarned                *float64 `json:"mphRewardEarned,omitempty"`
	RefundAmount                   *float64 `json:"refundAmount,omitempty"`
	Proof                          *Proof   //   `json:"proof,omitempty"`
}

type FundingInput struct {
	ID                             *string  `json:"id,omitempty"`
	NftID                          *int64   `json:"nftID,omitempty"`
	FunderID                       *string  `json:"FunderID,omitempty"`
	DPoolID                        *string  `json:"DPoolID,omitempty"`
	FromDepositID                  *int64   `json:"fromDepositID,omitempty"`
	ToDepositID                    *int64   `json:"toDepositID,omitempty"`
	Active                         *bool    `json:"active,omitempty"`
	RecordedFundedDepositAmount    *float64 `json:"recordedFundedDepositAmount,omitempty"`
	RecordedMoneyMarketIncomeIndex *int64   `json:"recordedMoneyMarketIncomeIndex,omitempty"`
	InitialFundedDepositAmount     *float64 `json:"initialFundedDepositAmount,omitempty"`
	FundedDeficitAmount            *float64 `json:"fundedDeficitAmount,omitempty"`
	TotalInterestEarned            *float64 `json:"totalInterestEarned,omitempty"`
	CreationTimestamp              *int64   `json:"creationTimestamp,omitempty"`
	MphRewardEarned                *float64 `json:"mphRewardEarned,omitempty"`
	RefundAmount                   *float64 `json:"refundAmount,omitempty"`
}

type Mph struct {
	ID                    *string  `json:"id,omitempty"`
	TotalHistoricalReward *float64 `json:"totalHistoricalReward,omitempty"`
	RewardPerSecond       *float64 `json:"rewardPerSecond,omitempty"`
	RewardPerMPHPerSecond *float64 `json:"rewardPerMPHPerSecond,omitempty"`
	Proof                 *Proof   //   `json:"proof,omitempty"`
}

type MPHHolder struct {
	ID                    *string  `json:"id,omitempty"`
	Address               *string  `json:"address,omitempty"`
	TotalHistoricalReward *float64 `json:"totalHistoricalReward,omitempty"`
	Proof                 *Proof   //   `json:"proof,omitempty"`
}

type MPHHolderInput struct {
	ID                    *string  `json:"id,omitempty"`
	Address               *string  `json:"address,omitempty"`
	TotalHistoricalReward *float64 `json:"totalHistoricalReward,omitempty"`
}

type MPHInput struct {
	ID                    *string  `json:"id,omitempty"`
	TotalHistoricalReward *float64 `json:"totalHistoricalReward,omitempty"`
	RewardPerSecond       *float64 `json:"rewardPerSecond,omitempty"`
	RewardPerMPHPerSecond *float64 `json:"rewardPerMPHPerSecond,omitempty"`
}

type Proof struct {
	Root  *string `json:"root,omitempty"`
	Proof *string `json:"proof,omitempty"`
}

type User struct {
	ID                  *string             `json:"id,omitempty"`
	Address             *string             `json:"address,omitempty"`
	Pools               []*DPool            //          `json:"pools,omitempty"`
	DPoolIDs            []*string           `json:"DPoolIDs,omitempty"`
	NumPools            *int64              `json:"numPools,omitempty"`
	Deposits            []*Deposit          //        `json:"deposits,omitempty"`
	DepositIDs          []*string           `json:"DepositIDs,omitempty"`
	NumDeposits         *int64              `json:"numDeposits,omitempty"`
	NumActiveDeposits   *int64              `json:"numActiveDeposits,omitempty"`
	TotalDepositByPool  []*UserTotalDeposit `json:"totalDepositByPool,omitempty"`
	UserTotalDepositIDs []*string           `json:"UserTotalDepositIDs,omitempty"`
	TotalMPHEarned      *float64            `json:"totalMPHEarned,omitempty"`
	TotalMPHPaidBack    *float64            `json:"totalMPHPaidBack,omitempty"`
	Proof               *Proof              //              `json:"proof,omitempty"`
}

type UserInput struct {
	ID                  *string   `json:"id,omitempty"`
	Address             *string   `json:"address,omitempty"`
	DPoolIDs            []*string `json:"DPoolIDs,omitempty"`
	NumPools            *int64    `json:"numPools,omitempty"`
	DepositIDs          []*string `json:"DepositIDs,omitempty"`
	NumDeposits         *int64    `json:"numDeposits,omitempty"`
	NumActiveDeposits   *int64    `json:"numActiveDeposits,omitempty"`
	UserTotalDepositIDs []*string `json:"UserTotalDepositIDs,omitempty"`
	TotalMPHEarned      *float64  `json:"totalMPHEarned,omitempty"`
	TotalMPHPaidBack    *float64  `json:"totalMPHPaidBack,omitempty"`
}

type UserTotalDeposit struct {
	ID                            *string  `json:"id,omitempty"`
	User                          *User    //  `json:"user,omitempty"`
	UserID                        *string  `json:"UserID,omitempty"`
	Pool                          *DPool   // `json:"pool,omitempty"`
	DPoolID                       *string  `json:"DPoolID,omitempty"`
	TotalActiveDeposit            *float64 `json:"totalActiveDeposit,omitempty"`
	TotalHistoricalDeposit        *float64 `json:"totalHistoricalDeposit,omitempty"`
	TotalInterestEarned           *float64 `json:"totalInterestEarned,omitempty"`
	TotalHistoricalInterestEarned *float64 `json:"totalHistoricalInterestEarned,omitempty"`
	Proof                         *Proof   //   `json:"proof,omitempty"`
}

type UserTotalDepositInput struct {
	ID                            *string  `json:"id,omitempty"`
	UserID                        *string  `json:"UserID,omitempty"`
	DPoolID                       *string  `json:"DPoolID,omitempty"`
	TotalActiveDeposit            *float64 `json:"totalActiveDeposit,omitempty"`
	TotalHistoricalDeposit        *float64 `json:"totalHistoricalDeposit,omitempty"`
	TotalInterestEarned           *float64 `json:"totalInterestEarned,omitempty"`
	TotalHistoricalInterestEarned *float64 `json:"totalHistoricalInterestEarned,omitempty"`
}

type Vest struct {
	ID                  *string  `json:"id,omitempty"`
	Index               *int64   `json:"index,omitempty"`
	User                *string  `json:"user,omitempty"`
	Amount              *float64 `json:"amount,omitempty"`
	VestPeriodInSeconds *int64   `json:"vestPeriodInSeconds,omitempty"`
	CreationTimestamp   *int64   `json:"creationTimestamp,omitempty"`
	WithdrawnAmount     *float64 `json:"withdrawnAmount,omitempty"`
	Proof               *Proof   //   `json:"proof,omitempty"`
}

type VestInput struct {
	ID                  *string  `json:"id,omitempty"`
	Index               *int64   `json:"index,omitempty"`
	User                *string  `json:"user,omitempty"`
	Amount              *float64 `json:"amount,omitempty"`
	VestPeriodInSeconds *int64   `json:"vestPeriodInSeconds,omitempty"`
	CreationTimestamp   *int64   `json:"creationTimestamp,omitempty"`
	WithdrawnAmount     *float64 `json:"withdrawnAmount,omitempty"`
}
